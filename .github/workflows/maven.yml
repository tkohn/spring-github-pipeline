name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_DISTRIBUTION: temurin
  JAVA_PACKAGE: jdk
  JAVA_VERSION: '17'
  MAVEN_CACHE: maven
  MAVEN_OUTPUT: target

jobs:
  compile:
    runs-on: ubuntu-latest
    name: compile
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-package: ${{ env.JAVA_PACKAGE }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.MAVEN_CACHE }}

      - name: mvn compile
        run: ./mvnw -f pom.xml -B compile

      - name: Upload ${{ env.MAVEN_OUTPUT }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MAVEN_OUTPUT }}
          path: ${{ env.MAVEN_OUTPUT }}
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: compile
    name: Run tests
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-package: ${{ env.JAVA_PACKAGE }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.MAVEN_CACHE }}

      - name: Download ${{ env.MAVEN_OUTPUT }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MAVEN_OUTPUT }}

      - name: mvn test
        run: ./mvnw -f pom.xml -B surefire:test

  package:
    runs-on: ubuntu-latest
    needs: compile
    name: Build the Maven Project
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-package: ${{ env.JAVA_PACKAGE }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: ${{ env.MAVEN_CACHE }}

      - name: Download ${{ env.MAVEN_OUTPUT }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MAVEN_OUTPUT }}

      - name: mvn package without tests
        run: ./mvnw -f pom.xml -B package -DskipTests
