name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_DISTRIBUTION: temurin
  JAVA_PACKAGE: jdk
  JAVA_VERSION: '17'
  MAVEN_TARGET_AFTER_COMPILE: target-after-compile
  MAVEN_TARGET_AFTER_TEST: target-after-test

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile source code
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Cache maven dependencies
        id: cache-maven
        uses: actions/cache@v4
        env:
          cache-name: cache-maven-dependencies
        with:
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-maven-

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-package: ${{ env.JAVA_PACKAGE }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: mvn compile
        run: ./mvnw -f pom.xml -B compile

      - name: Upload ${{ env.MAVEN_TARGET_AFTER_COMPILE }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MAVEN_TARGET_AFTER_COMPILE }}
          path: target
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: compile
    name: Run tests with JaCoCo
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Cache maven dependencies
        id: cache-maven
        uses: actions/cache@v4
        env:
          cache-name: cache-maven-dependencies
        with:
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-maven-

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-package: ${{ env.JAVA_PACKAGE }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Download ${{ env.MAVEN_TARGET_AFTER_COMPILE }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MAVEN_TARGET_AFTER_COMPILE }}

      - name: mvn test-compile
        run: ./mvnw -f pom.xml -B test-compile

      - name: mvn test with JaCoCo
        run: ./mvnw -f pom.xml -B org.jacoco:jacoco-maven-plugin:prepare-agent test org.jacoco:jacoco-maven-plugin:report

      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco
          path: target/site/jacoco
          retention-days: 7

      - name: Upload ${{ env.MAVEN_TARGET_AFTER_TEST }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MAVEN_TARGET_AFTER_TEST }}
          path: target
          retention-days: 1

  analyse:
    runs-on: ubuntu-latest
    needs:
      - compile
      - test
    name: SpotBugs and SBOM
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Cache maven dependencies
        id: cache-maven
        uses: actions/cache@v4
        env:
          cache-name: cache-maven-dependencies
        with:
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-maven-

      - name: Download ${{ env.MAVEN_TARGET_AFTER_TEST }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MAVEN_TARGET_AFTER_TEST }}
          path: target

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-package: ${{ env.JAVA_PACKAGE }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: debugging
        run: ls -la && pwd && ls -la ~/
      - name: mvn spotbugs
        run: ./mvnw -f pom.xml -B com.github.spotbugs:spotbugs-maven-plugin:spotbugs

      - name: Upload SpotBugs Report
        uses: actions/upload-artifact@v4
        with:
          name: SpotBugs
          path: target/spotbugsXml.xml
          retention-days: 1

      - name: mvn cyclonedx software bill of material (SBOM)
        run: ./mvnw org.cyclonedx:cyclonedx-maven-plugin:makeBom

      - name: Upload SBOM Report
        uses: actions/upload-artifact@v4
        with:
          name: SBOM
          path: |
            target/bom.json
            target/bom.xml
          retention-days: 1

  package:
    runs-on: ubuntu-latest
    needs: compile
    name: Build the Maven Project
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Cache maven dependencies
        id: cache-maven
        uses: actions/cache@v4
        env:
          cache-name: cache-maven-dependencies
        with:
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-maven-

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-package: ${{ env.JAVA_PACKAGE }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Download ${{ env.MAVEN_OUTPUT }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MAVEN_TARGET_AFTER_COMPILE }}

      - name: mvn package without tests
        run: ./mvnw -f pom.xml -B package -DskipTests
